T	input.go	/^type T int$/;"	t	package:main
f1	input.go	/^func f1() {$/;"	f	package:main	signature:()
f2	input.go	/^func f2(a int) {$/;"	f	package:main	signature:(a int)
f3	input.go	/^func f3(a int) string {$/;"	f	package:main	signature:(a int)
f4	input.go	/^func f4(a, b, c <-chan int, d, e, f string) (A, B, C int, D string) {$/;"	f	package:main	signature:(a, b, c <-chan int, d, e, f string)
f5	input.go	/^func (t *T) f5(\/* comment *\/ a, \/*comment*\/ \/*comment*\/       b string, $/;"	f	unknown:main.T	signature:( a, b string, c []int)
f6	input.go	/^func (t *(T)) f6(r struct {a int `foo`; b string `bar`}) net.IP {$/;"	f	unknown:main.T	signature:(r struct {a int `foo`; b string `bar`})
main	input.go	/^func main() {$/;"	f	package:main	signature:()
main	input.go	/^package main$/;"	p
